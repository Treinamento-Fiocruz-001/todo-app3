##
name: Laravel CI/CD (Self-Hosted)
 
on:
  push:
    branches: [ main ]
jobs:
  # ===============================
  #  BUILD
  # ===============================
  
  build:
    runs-on: [self-hosted,label-1] 
 
    steps:
      - uses: actions/checkout@v4
 
      # âœ… Passo 4 â€” VerificaÃ§Ã£o do Composer no PATH
      - name: Verificar Composer no ambiente
        run: |
          echo "Verificando Composer no runner..."
          echo "PATH atual: $PATH"
          which composer || echo "Composer nÃ£o encontrado"
          composer --version || echo "Composer nÃ£o disponÃ­vel"
 
      # âœ… Passo 3 â€” Usar caminho absoluto do Composer

 
      - name: Verificar PHP instalado
        run: php -v

      - name: Verificar Composer instalado
        run: composer -V

      - name: Instalar dependÃªncias
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copiar arquivo .env de exemplo
        run: cp .env.example .env || true

      - name: Gerar chave da aplicaÃ§Ã£o
        run: php artisan key:generate


          
  # ===============================
  #  QUALIDADE
  # ===============================
  quality:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Rodar testes (PHPUnit)
        run: vendor/bin/phpunit --testdox

      - name: Rodar anÃ¡lise estÃ¡tica (PHPStan)
        run: |
          rm -rf /tmp/phpstan || true
          vendor/bin/phpstan analyse --memory-limit=1G --no-progress
        env:
          PHPSTAN_TMP_DIR: /dev/null

      - name: Rodar CodeSniffer (PSR-12)
        run: vendor/bin/phpcs
  # ===============================
  #  DEPLOY
  # ===============================
  deploy:
    runs-on: self-hosted
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - name: Deploy local
        run: |
          echo "Iniciando deploy"
       
          ls -ld /srv/apps/todo-app
          # Instalar rsync caso nÃ£o exista
          if ! command -v rsync &> /dev/null; then
            
            echo "ðŸ”§ Instalando rsync..."
            sudo yum install -y rsync || sudo apt install -y rsync
          fi
 
          # Sincronizar cÃ³digo mantendo permissÃµes e ignorando pastas crÃ­ticas
          rsync -aAX --delete \
            --exclude 'storage' \
            --exclude 'bootstrap/cache' \
            ./ /srv/apps/todo-app
 
          # Reconstruir cache do Laravel
          cd /srv/apps/todo-app
          /usr/local/bin/composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader
          php artisan config:cache || true
          php artisan route:cache || true
          php artisan view:cache || true
 
          echo "âœ… Deploy finalizado com sucesso"
